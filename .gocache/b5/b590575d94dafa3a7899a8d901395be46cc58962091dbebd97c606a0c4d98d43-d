//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
//go:cgo_ldflag "-L/Users/hujiayilu/go/pkg/mod/github.com/gen2brain/go-fitz@v1.20.0/libs"
//go:cgo_ldflag "-lmupdf_darwin_arm64"
//go:cgo_ldflag "-lmupdfthird_darwin_arm64"
//go:cgo_ldflag "-lm"
// Code generated by cmd/cgo; DO NOT EDIT.

package fitz

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_keepalive runtime.cgoKeepAlive
//go:noescape
func _Cgo_keepalive(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype__GoBytes_ []byte

type _Ctype__GoString_ string

type _Ctype___darwin_intptr_t = _Ctype_long

type _Ctype_char int8

type _Ctype_float float32

type _Ctype_fz_aa_context = _Ctype_struct___5

type _Ctype_fz_alloc_context = _Ctype_struct___0

type _Ctype_fz_bookmark = _Ctype_intptr_t

type _Ctype_fz_buffer = _Ctype_struct___7

type _Ctype_fz_color_params = _Ctype_struct___12

type _Ctype_fz_colorspace = _Ctype_struct_fz_colorspace

type _Ctype_fz_colorspace_context = _Ctype_struct_fz_colorspace_context

type _Ctype_fz_compressed_buffer = _Ctype_struct___19

type _Ctype_fz_compression_params = _Ctype_struct___20

type _Ctype_fz_context = _Ctype_struct_fz_context

type _Ctype_fz_cookie = _Ctype_struct___11

type _Ctype_fz_default_colorspaces = _Ctype_struct___22

type _Ctype_fz_device = _Ctype_struct_fz_device

type _Ctype_fz_device_container_stack = _Ctype_struct___10

type _Ctype_fz_document = _Ctype_struct_fz_document

type _Ctype_fz_document_authenticate_password_fn [0]byte

type _Ctype_fz_document_count_chapters_fn [0]byte

type _Ctype_fz_document_count_pages_fn [0]byte

type _Ctype_fz_document_drop_fn [0]byte

type _Ctype_fz_document_format_link_uri_fn [0]byte

type _Ctype_fz_document_handler_context = _Ctype_struct_fz_document_handler_context

type _Ctype_fz_document_has_permission_fn [0]byte

type _Ctype_fz_document_layout_fn [0]byte

type _Ctype_fz_document_load_outline_fn [0]byte

type _Ctype_fz_document_load_page_fn [0]byte

type _Ctype_fz_document_lookup_bookmark_fn [0]byte

type _Ctype_fz_document_lookup_metadata_fn [0]byte

type _Ctype_fz_document_make_bookmark_fn [0]byte

type _Ctype_fz_document_needs_password_fn [0]byte

type _Ctype_fz_document_outline_iterator_fn [0]byte

type _Ctype_fz_document_output_accelerator_fn [0]byte

type _Ctype_fz_document_output_intent_fn [0]byte

type _Ctype_fz_document_resolve_link_dest_fn [0]byte

type _Ctype_fz_document_set_metadata_fn [0]byte

type _Ctype_fz_drop_image_fn [0]byte

type _Ctype_fz_error_context = _Ctype_struct___2

type _Ctype_fz_error_stack_slot = _Ctype_struct___3

type _Ctype_fz_font = _Ctype_struct_fz_font

type _Ctype_fz_font_context = _Ctype_struct_fz_font_context

type _Ctype_fz_font_flags_t = _Ctype_struct___23

type _Ctype_fz_glyph_cache = _Ctype_struct_fz_glyph_cache

type _Ctype_fz_icc_profile = _Ctype_struct_fz_icc_profile

type _Ctype_fz_image = _Ctype_struct_fz_image

type _Ctype_fz_image_get_pixmap_fn [0]byte

type _Ctype_fz_image_get_size_fn [0]byte

type _Ctype_fz_irect = _Ctype_struct___17

type _Ctype_fz_jbig2_globals = _Ctype_struct_fz_jbig2_globals

type _Ctype_fz_jmp_buf = _Ctype_sigjmp_buf

type _Ctype_fz_key_storable = _Ctype_struct___8

type _Ctype_fz_linecap uint32

type _Ctype_fz_linejoin uint32

type _Ctype_fz_link = _Ctype_struct_fz_link

type _Ctype_fz_link_dest = _Ctype_struct___25

type _Ctype_fz_link_dest_type uint32

type _Ctype_fz_location = _Ctype_struct___13

type _Ctype_fz_locks_context = _Ctype_struct___1

type _Ctype_fz_matrix = _Ctype_struct___16

type _Ctype_fz_outline = _Ctype_struct_fz_outline

type _Ctype_fz_outline_item = _Ctype_struct___26

type _Ctype_fz_outline_iterator = _Ctype_struct_fz_outline_iterator

type _Ctype_fz_outline_iterator_delete_fn [0]byte

type _Ctype_fz_outline_iterator_down_fn [0]byte

type _Ctype_fz_outline_iterator_drop_fn [0]byte

type _Ctype_fz_outline_iterator_insert_fn [0]byte

type _Ctype_fz_outline_iterator_item_fn [0]byte

type _Ctype_fz_outline_iterator_next_fn [0]byte

type _Ctype_fz_outline_iterator_prev_fn [0]byte

type _Ctype_fz_outline_iterator_up_fn [0]byte

type _Ctype_fz_outline_iterator_update_fn [0]byte

type _Ctype_fz_output = _Ctype_struct_fz_output

type _Ctype_fz_output_close_fn [0]byte

type _Ctype_fz_output_drop_fn [0]byte

type _Ctype_fz_output_seek_fn [0]byte

type _Ctype_fz_output_tell_fn [0]byte

type _Ctype_fz_output_write_fn [0]byte

type _Ctype_fz_page = _Ctype_struct_fz_page

type _Ctype_fz_page_bound_page_fn [0]byte

type _Ctype_fz_page_control_separation_fn [0]byte

type _Ctype_fz_page_create_link_fn [0]byte

type _Ctype_fz_page_drop_page_fn [0]byte

type _Ctype_fz_page_load_links_fn [0]byte

type _Ctype_fz_page_page_presentation_fn [0]byte

type _Ctype_fz_page_run_page_fn [0]byte

type _Ctype_fz_page_separation_disabled_fn [0]byte

type _Ctype_fz_page_separations_fn [0]byte

type _Ctype_fz_page_uses_overprint_fn [0]byte

type _Ctype_fz_path = _Ctype_struct_fz_path

type _Ctype_fz_permission uint32

type _Ctype_fz_pixmap = _Ctype_struct_fz_pixmap

type _Ctype_fz_point = _Ctype_struct___27

type _Ctype_fz_pool = _Ctype_struct_fz_pool

type _Ctype_fz_quad = _Ctype_struct___28

type _Ctype_fz_rect = _Ctype_struct___6

type _Ctype_fz_separations = _Ctype_struct_fz_separations

type _Ctype_fz_shade = _Ctype_struct___29

type _Ctype_fz_shaper_data_t = _Ctype_struct___24

type _Ctype_fz_stext_block = _Ctype_struct_fz_stext_block

type _Ctype_fz_stext_char = _Ctype_struct_fz_stext_char

type _Ctype_fz_stext_line = _Ctype_struct_fz_stext_line

type _Ctype_fz_stext_options = _Ctype_struct___18

type _Ctype_fz_stext_page = _Ctype_struct___14

type _Ctype_fz_storable = _Ctype_struct_fz_storable

type _Ctype_fz_store = _Ctype_struct_fz_store

type _Ctype_fz_store_drop_fn [0]byte

type _Ctype_fz_stream = _Ctype_struct_fz_stream

type _Ctype_fz_stream_drop_fn [0]byte

type _Ctype_fz_stream_from_output_fn [0]byte

type _Ctype_fz_stream_next_fn [0]byte

type _Ctype_fz_stream_seek_fn [0]byte

type _Ctype_fz_stroke_state = _Ctype_struct___31

type _Ctype_fz_style_context = _Ctype_struct_fz_style_context

type _Ctype_fz_text = _Ctype_struct___32

type _Ctype_fz_text_item = _Ctype_struct___33

type _Ctype_fz_text_span = _Ctype_struct_fz_text_span

type _Ctype_fz_transition = _Ctype_struct___34

type _Ctype_fz_truncate_fn [0]byte

type _Ctype_fz_tuning_context = _Ctype_struct_fz_tuning_context

type _Ctype_fz_warn_context = _Ctype_struct___4

type _Ctype_int int32

type _Ctype_int64_t = _Ctype_longlong

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_intptr_t = _Ctype___darwin_intptr_t

type _Ctype_long int64

type _Ctype_longlong int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_short int16

type _Ctype_sigjmp_buf [49]_Ctype_int

type _Ctype_size_t = _Ctype_ulong

type _Ctype_struct___0 struct {
	user	unsafe.Pointer
	malloc	*[0]byte
	realloc	*[0]byte
	free	*[0]byte
}

type _Ctype_struct___1 struct {
	user	unsafe.Pointer
	lock	*[0]byte
	unlock	*[0]byte
}

type _Ctype_struct___10 struct {
	scissor	_Ctype_struct___6
	_type	_Ctype_int
	user	_Ctype_int
}

type _Ctype_struct___11 struct {
	abort		_Ctype_int
	progress	_Ctype_int
	progress_max	_Ctype_size_t
	errors		_Ctype_int
	incomplete	_Ctype_int
}

type _Ctype_struct___12 struct {
	ri	_Ctype_uint8_t
	bp	_Ctype_uint8_t
	op	_Ctype_uint8_t
	opm	_Ctype_uint8_t
}

type _Ctype_struct___13 struct {
	chapter	_Ctype_int
	page	_Ctype_int
}

type _Ctype_struct___14 struct {
	pool		*_Ctype_struct_fz_pool
	mediabox	_Ctype_struct___6
	first_block	*_Ctype_struct_fz_stext_block
	last_block	*_Ctype_struct_fz_stext_block
}

type _Ctype_struct___16 struct {
	a	_Ctype_float
	b	_Ctype_float
	c	_Ctype_float
	d	_Ctype_float
	e	_Ctype_float
	f	_Ctype_float
}

type _Ctype_struct___17 struct {
	x0	_Ctype_int
	y0	_Ctype_int
	x1	_Ctype_int
	y1	_Ctype_int
}

type _Ctype_struct___18 struct {
	flags	_Ctype_int
	scale	_Ctype_float
}

type _Ctype_struct___19 struct {
	params	_Ctype_struct___20
	buffer	*_Ctype_struct___7
}

type _Ctype_struct___2 struct {
	top		*_Ctype_struct___3
	stack		[256]_Ctype_struct___3
	padding		_Ctype_struct___3
	stack_base	*_Ctype_struct___3
	errcode		_Ctype_int
	print_user	unsafe.Pointer
	print		*[0]byte
	message		[256]_Ctype_char
}

type _Ctype_struct___20 struct {
	_type	_Ctype_int
	_	[4]byte
	u	[32]byte
}

type _Ctype_struct___22 struct {
	refs	_Ctype_int
	gray	*_Ctype_struct_fz_colorspace
	rgb	*_Ctype_struct_fz_colorspace
	cmyk	*_Ctype_struct_fz_colorspace
	oi	*_Ctype_struct_fz_colorspace
}

type _Ctype_struct___23 struct {
	_ [4]byte
}

type _Ctype_struct___24 struct {
	shaper_handle	unsafe.Pointer
	destroy		*[0]byte
}

type _Ctype_struct___25 struct {
	loc	_Ctype_struct___13
	_type	_Ctype_fz_link_dest_type
	x	_Ctype_float
	y	_Ctype_float
	w	_Ctype_float
	h	_Ctype_float
	zoom	_Ctype_float
}

type _Ctype_struct___26 struct {
	title	*_Ctype_char
	uri	*_Ctype_char
	is_open	_Ctype_int
	_	[4]byte
}

type _Ctype_struct___27 struct {
	x	_Ctype_float
	y	_Ctype_float
}

type _Ctype_struct___28 struct {
	ul	_Ctype_struct___27
	ur	_Ctype_struct___27
	ll	_Ctype_struct___27
	lr	_Ctype_struct___27
}

type _Ctype_struct___29 struct {
	storable	_Ctype_struct_fz_storable
	bbox		_Ctype_struct___6
	colorspace	*_Ctype_struct_fz_colorspace
	matrix		_Ctype_struct___16
	use_background	_Ctype_int
	background	[32]_Ctype_float
	use_function	_Ctype_int
	function	[256][33]_Ctype_float
	_type		_Ctype_int
	_		[4]byte
	u		[288]byte
	buffer		*_Ctype_struct___19
}

type _Ctype_struct___3 struct {
	buffer	_Ctype_fz_jmp_buf
	state	_Ctype_int
	code	_Ctype_int
	padding	[24]_Ctype_char
}

type _Ctype_struct___31 struct {
	refs		_Ctype_int
	start_cap	_Ctype_fz_linecap
	dash_cap	_Ctype_fz_linecap
	end_cap		_Ctype_fz_linecap
	linejoin	_Ctype_fz_linejoin
	linewidth	_Ctype_float
	miterlimit	_Ctype_float
	dash_phase	_Ctype_float
	dash_len	_Ctype_int
	dash_list	[32]_Ctype_float
}

type _Ctype_struct___32 struct {
	refs	_Ctype_int
	head	*_Ctype_struct_fz_text_span
	tail	*_Ctype_struct_fz_text_span
}

type _Ctype_struct___33 struct {
	x	_Ctype_float
	y	_Ctype_float
	gid	_Ctype_int
	ucs	_Ctype_int
}

type _Ctype_struct___34 struct {
	_type		_Ctype_int
	duration	_Ctype_float
	vertical	_Ctype_int
	outwards	_Ctype_int
	direction	_Ctype_int
	state0		_Ctype_int
	state1		_Ctype_int
}

type _Ctype_struct___4 struct {
	print_user	unsafe.Pointer
	print		*[0]byte
	count		_Ctype_int
	message		[256]_Ctype_char
	_		[4]byte
}

type _Ctype_struct___5 struct {
	hscale		_Ctype_int
	vscale		_Ctype_int
	scale		_Ctype_int
	bits		_Ctype_int
	text_bits	_Ctype_int
	min_line_width	_Ctype_float
}

type _Ctype_struct___6 struct {
	x0	_Ctype_float
	y0	_Ctype_float
	x1	_Ctype_float
	y1	_Ctype_float
}

type _Ctype_struct___7 struct {
	refs		_Ctype_int
	data		*_Ctype_uchar
	cap		_Ctype_size_t
	len		_Ctype_size_t
	unused_bits	_Ctype_int
	shared		_Ctype_int
}

type _Ctype_struct___8 struct {
	storable	_Ctype_struct_fz_storable
	store_key_refs	_Ctype_short
	_		[6]byte
}

type _Ctype_struct_fz_colorspace struct {
	key_storable	_Ctype_struct___8
	_type		uint32
	flags		_Ctype_int
	n		_Ctype_int
	name		*_Ctype_char
	u		[288]byte
}

type _Ctype_struct_fz_colorspace_context _cgopackage.Incomplete

type _Ctype_struct_fz_context struct {
	user		unsafe.Pointer
	alloc		_Ctype_struct___0
	locks		_Ctype_struct___1
	error		_Ctype_struct___2
	warn		_Ctype_struct___4
	aa		_Ctype_struct___5
	seed48		[7]_Ctype_uint16_t
	icc_enabled	_Ctype_int
	throw_on_repair	_Ctype_int
	handler		*_Ctype_struct_fz_document_handler_context
	style		*_Ctype_struct_fz_style_context
	tuning		*_Ctype_struct_fz_tuning_context
	stddbg		*_Ctype_struct_fz_output
	font		*_Ctype_struct_fz_font_context
	colorspace	*_Ctype_struct_fz_colorspace_context
	store		*_Ctype_struct_fz_store
	glyph_cache	*_Ctype_struct_fz_glyph_cache
}

type _Ctype_struct_fz_device struct {
	refs			_Ctype_int
	hints			_Ctype_int
	flags			_Ctype_int
	close_device		*[0]byte
	drop_device		*[0]byte
	fill_path		*[0]byte
	stroke_path		*[0]byte
	clip_path		*[0]byte
	clip_stroke_path	*[0]byte
	fill_text		*[0]byte
	stroke_text		*[0]byte
	clip_text		*[0]byte
	clip_stroke_text	*[0]byte
	ignore_text		*[0]byte
	fill_shade		*[0]byte
	fill_image		*[0]byte
	fill_image_mask		*[0]byte
	clip_image_mask		*[0]byte
	pop_clip		*[0]byte
	begin_mask		*[0]byte
	end_mask		*[0]byte
	begin_group		*[0]byte
	end_group		*[0]byte
	begin_tile		*[0]byte
	end_tile		*[0]byte
	render_flags		*[0]byte
	set_default_colorspaces	*[0]byte
	begin_layer		*[0]byte
	end_layer		*[0]byte
	d1_rect			_Ctype_struct___6
	container_len		_Ctype_int
	container_cap		_Ctype_int
	container		*_Ctype_struct___10
}

type _Ctype_struct_fz_display_list _cgopackage.Incomplete

type _Ctype_struct_fz_document struct {
	refs			_Ctype_int
	drop_document		*_Ctype_fz_document_drop_fn
	needs_password		*_Ctype_fz_document_needs_password_fn
	authenticate_password	*_Ctype_fz_document_authenticate_password_fn
	has_permission		*_Ctype_fz_document_has_permission_fn
	load_outline		*_Ctype_fz_document_load_outline_fn
	outline_iterator	*_Ctype_fz_document_outline_iterator_fn
	layout			*_Ctype_fz_document_layout_fn
	make_bookmark		*_Ctype_fz_document_make_bookmark_fn
	lookup_bookmark		*_Ctype_fz_document_lookup_bookmark_fn
	resolve_link_dest	*_Ctype_fz_document_resolve_link_dest_fn
	format_link_uri		*_Ctype_fz_document_format_link_uri_fn
	count_chapters		*_Ctype_fz_document_count_chapters_fn
	count_pages		*_Ctype_fz_document_count_pages_fn
	load_page		*_Ctype_fz_document_load_page_fn
	lookup_metadata		*_Ctype_fz_document_lookup_metadata_fn
	set_metadata		*_Ctype_fz_document_set_metadata_fn
	get_output_intent	*_Ctype_fz_document_output_intent_fn
	output_accelerator	*_Ctype_fz_document_output_accelerator_fn
	did_layout		_Ctype_int
	is_reflowable		_Ctype_int
	open			*_Ctype_struct_fz_page
}

type _Ctype_struct_fz_document_handler_context _cgopackage.Incomplete

type _Ctype_struct_fz_font struct {
	refs		_Ctype_int
	name		[32]_Ctype_char
	buffer		*_Ctype_struct___7
	flags		_Ctype_struct___23
	ft_face		unsafe.Pointer
	shaper_data	_Ctype_struct___24
	t3matrix	_Ctype_struct___16
	t3resources	unsafe.Pointer
	t3procs		**_Ctype_struct___7
	t3lists		**_Ctype_struct_fz_display_list
	t3widths	*_Ctype_float
	t3flags		*_Ctype_ushort
	t3doc		unsafe.Pointer
	t3run		*[0]byte
	t3freeres	*[0]byte
	bbox		_Ctype_struct___6
	glyph_count	_Ctype_int
	bbox_table	**_Ctype_struct___6
	use_glyph_bbox	_Ctype_int
	width_count	_Ctype_int
	width_default	_Ctype_short
	width_table	*_Ctype_short
	advance_cache	**_Ctype_float
	encoding_cache	[256]*_Ctype_uint16_t
	has_digest	_Ctype_int
	digest		[16]_Ctype_uchar
	_		[4]byte
}

type _Ctype_struct_fz_font_context _cgopackage.Incomplete

type _Ctype_struct_fz_glyph_cache _cgopackage.Incomplete

type _Ctype_struct_fz_icc_profile _cgopackage.Incomplete

type _Ctype_struct_fz_image struct {
	key_storable	_Ctype_struct___8
	w		_Ctype_int
	h		_Ctype_int
	n		_Ctype_uint8_t
	bpc		_Ctype_uint8_t
	_		[1]byte
	orientation	_Ctype_uint8_t
	mask		*_Ctype_struct_fz_image
	xres		_Ctype_int
	yres		_Ctype_int
	colorspace	*_Ctype_struct_fz_colorspace
	drop_image	*_Ctype_fz_drop_image_fn
	get_pixmap	*_Ctype_fz_image_get_pixmap_fn
	get_size	*_Ctype_fz_image_get_size_fn
	colorkey	[64]_Ctype_int
	decode		[64]_Ctype_float
}

type _Ctype_struct_fz_jbig2_globals _cgopackage.Incomplete

type _Ctype_struct_fz_link struct {
	refs	_Ctype_int
	next	*_Ctype_struct_fz_link
	rect	_Ctype_struct___6
	uri	*_Ctype_char
}

type _Ctype_struct_fz_outline struct {
	refs	_Ctype_int
	title	*_Ctype_char
	uri	*_Ctype_char
	page	_Ctype_struct___13
	x	_Ctype_float
	y	_Ctype_float
	next	*_Ctype_struct_fz_outline
	down	*_Ctype_struct_fz_outline
	is_open	_Ctype_int
	_	[4]byte
}

type _Ctype_struct_fz_outline_iterator struct {
	drop	*_Ctype_fz_outline_iterator_drop_fn
	item	*_Ctype_fz_outline_iterator_item_fn
	next	*_Ctype_fz_outline_iterator_next_fn
	prev	*_Ctype_fz_outline_iterator_prev_fn
	up	*_Ctype_fz_outline_iterator_up_fn
	down	*_Ctype_fz_outline_iterator_down_fn
	insert	*_Ctype_fz_outline_iterator_insert_fn
	update	*_Ctype_fz_outline_iterator_update_fn
	del	*_Ctype_fz_outline_iterator_delete_fn
	doc	*_Ctype_struct_fz_document
}

type _Ctype_struct_fz_output struct {
	state		unsafe.Pointer
	write		*_Ctype_fz_output_write_fn
	seek		*_Ctype_fz_output_seek_fn
	tell		*_Ctype_fz_output_tell_fn
	close		*_Ctype_fz_output_close_fn
	drop		*_Ctype_fz_output_drop_fn
	as_stream	*_Ctype_fz_stream_from_output_fn
	truncate	*_Ctype_fz_truncate_fn
	bp		*_Ctype_char
	wp		*_Ctype_char
	ep		*_Ctype_char
}

type _Ctype_struct_fz_page struct {
	refs			_Ctype_int
	doc			*_Ctype_struct_fz_document
	chapter			_Ctype_int
	number			_Ctype_int
	incomplete		_Ctype_int
	drop_page		*_Ctype_fz_page_drop_page_fn
	bound_page		*_Ctype_fz_page_bound_page_fn
	run_page_contents	*_Ctype_fz_page_run_page_fn
	run_page_annots		*_Ctype_fz_page_run_page_fn
	run_page_widgets	*_Ctype_fz_page_run_page_fn
	load_links		*_Ctype_fz_page_load_links_fn
	page_presentation	*_Ctype_fz_page_page_presentation_fn
	control_separation	*_Ctype_fz_page_control_separation_fn
	separation_disabled	*_Ctype_fz_page_separation_disabled_fn
	separations		*_Ctype_fz_page_separations_fn
	overprint		*_Ctype_fz_page_uses_overprint_fn
	create_link		*_Ctype_fz_page_create_link_fn
	prev			**_Ctype_struct_fz_page
	next			*_Ctype_struct_fz_page
}

type _Ctype_struct_fz_path _cgopackage.Incomplete

type _Ctype_struct_fz_pixmap struct {
	storable	_Ctype_struct_fz_storable
	x		_Ctype_int
	y		_Ctype_int
	w		_Ctype_int
	h		_Ctype_int
	n		_Ctype_uchar
	s		_Ctype_uchar
	alpha		_Ctype_uchar
	flags		_Ctype_uchar
	stride		_Ctype_ptrdiff_t
	seps		*_Ctype_struct_fz_separations
	xres		_Ctype_int
	yres		_Ctype_int
	colorspace	*_Ctype_struct_fz_colorspace
	samples		*_Ctype_uchar
	underlying	*_Ctype_struct_fz_pixmap
}

type _Ctype_struct_fz_pool _cgopackage.Incomplete

type _Ctype_struct_fz_separations _cgopackage.Incomplete

type _Ctype_struct_fz_stext_block struct {
	_type	_Ctype_int
	bbox	_Ctype_struct___6
	_	[4]byte
	u	[32]byte
	prev	*_Ctype_struct_fz_stext_block
	next	*_Ctype_struct_fz_stext_block
}

type _Ctype_struct_fz_stext_char struct {
	c	_Ctype_int
	color	_Ctype_int
	origin	_Ctype_struct___27
	quad	_Ctype_struct___28
	size	_Ctype_float
	font	*_Ctype_struct_fz_font
	next	*_Ctype_struct_fz_stext_char
}

type _Ctype_struct_fz_stext_line struct {
	wmode		_Ctype_int
	dir		_Ctype_struct___27
	bbox		_Ctype_struct___6
	first_char	*_Ctype_struct_fz_stext_char
	last_char	*_Ctype_struct_fz_stext_char
	prev		*_Ctype_struct_fz_stext_line
	next		*_Ctype_struct_fz_stext_line
}

type _Ctype_struct_fz_storable struct {
	refs	_Ctype_int
	drop	*_Ctype_fz_store_drop_fn
}

type _Ctype_struct_fz_store _cgopackage.Incomplete

type _Ctype_struct_fz_stream struct {
	refs		_Ctype_int
	error		_Ctype_int
	eof		_Ctype_int
	progressive	_Ctype_int
	pos		_Ctype_int64_t
	avail		_Ctype_int
	bits		_Ctype_int
	rp		*_Ctype_uchar
	wp		*_Ctype_uchar
	state		unsafe.Pointer
	next		*_Ctype_fz_stream_next_fn
	drop		*_Ctype_fz_stream_drop_fn
	seek		*_Ctype_fz_stream_seek_fn
}

type _Ctype_struct_fz_style_context _cgopackage.Incomplete

type _Ctype_struct_fz_text_span struct {
	font	*_Ctype_struct_fz_font
	trm	_Ctype_struct___16
	_	[4]byte
	len	_Ctype_int
	cap	_Ctype_int
	items	*_Ctype_struct___33
	next	*_Ctype_struct_fz_text_span
}

type _Ctype_struct_fz_tuning_context _cgopackage.Incomplete

type _Ctype_uchar uint8

type _Ctype_uint uint32

type _Ctype_uint16_t = _Ctype_ushort

type _Ctype_uint8_t = _Ctype_uchar

type _Ctype_ulong uint64

type _Ctype_union___15 = [32]byte

type _Ctype_union___21 = [32]byte

type _Ctype_union___30 = [288]byte

type _Ctype_union___9 = [288]byte

type _Ctype_ushort uint16

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})
//go:linkname __cgo_fz_default_color_params fz_default_color_params
//go:cgo_import_static fz_default_color_params
var __cgo_fz_default_color_params byte
var _Cvar_fz_default_color_params *_Ctype_struct___12 = (*_Ctype_struct___12)(unsafe.Pointer(&__cgo_fz_default_color_params))
//go:linkname __cgo_fz_identity fz_identity
//go:cgo_import_static fz_identity
var __cgo_fz_identity byte
var _Cvar_fz_identity *_Ctype_struct___16 = (*_Ctype_struct___16)(unsafe.Pointer(&__cgo_fz_identity))
//go:linkname __cgo_fz_version fz_version
//go:cgo_import_static fz_version
var __cgo_fz_version byte
var _Cvar_fz_version **_Ctype_char = (**_Ctype_char)(unsafe.Pointer(&__cgo_fz_version))
const _Ciconst_FZ_NO_CACHE = 0x2
const _Ciconst_FZ_STEXT_PRESERVE_IMAGES = 0x4
const _Ciconst_FZ_STORE_UNLIMITED = 0x0
const _Ciconst_FZ_SVG_TEXT_AS_PATH = 0x0


// CString converts the Go string s to a C string.
//
// The C string is allocated in the C heap using malloc.
// It is the caller's responsibility to arrange for it to be
// freed, such as by calling C.free (be sure to include stdlib.h
// if C.free is needed).
func _Cfunc_CString(s string) *_Ctype_char {
	if len(s)+1 <= 0 {
		panic("string too large")
	}
	p := _cgo_cmalloc(uint64(len(s)+1))
	sliceHeader := struct {
		p   unsafe.Pointer
		len int
		cap int
	}{p, len(s)+1, len(s)+1}
	b := *(*[]byte)(unsafe.Pointer(&sliceHeader))
	copy(b, s)
	b[len(s)] = 0
	return (*_Ctype_char)(p)
}

//go:linkname _cgo_runtime_gobytes runtime.gobytes
func _cgo_runtime_gobytes(unsafe.Pointer, int) []byte

// GoBytes converts the C data p with explicit length l to a Go []byte.
func _Cfunc_GoBytes(p unsafe.Pointer, l _Ctype_int) []byte {
	return _cgo_runtime_gobytes(p, int(l))
}

//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}

//go:linkname _cgo_runtime_gostringn runtime.gostringn
func _cgo_runtime_gostringn(*_Ctype_char, int) string

// GoStringN converts the C data p with explicit length l to a Go string.
func _Cfunc_GoStringN(p *_Ctype_char, l _Ctype_int) string {
	return _cgo_runtime_gostringn(p, int(l))
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_free
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_free _cgo_2ca6d207c13c_Cfunc_free
var __cgofn__cgo_2ca6d207c13c_Cfunc_free byte
var _cgo_2ca6d207c13c_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_bound_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_bound_page _cgo_2ca6d207c13c_Cfunc_fz_bound_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_bound_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_bound_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_bound_page)

//go:cgo_unsafe_args
func _Cfunc_fz_bound_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_page) (r1 _Ctype_struct___6) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_bound_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_buffer_storage
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_buffer_storage _cgo_2ca6d207c13c_Cfunc_fz_buffer_storage
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_buffer_storage byte
var _cgo_2ca6d207c13c_Cfunc_fz_buffer_storage = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_buffer_storage)

//go:cgo_unsafe_args
func _Cfunc_fz_buffer_storage(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___7, p2 **_Ctype_uchar) (r1 _Ctype_size_t) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_buffer_storage, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value _cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value byte
var _cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value)

//go:cgo_unsafe_args
func _Cfunc_fz_clear_pixmap_with_value(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_pixmap, p2 _Ctype_int) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_clear_pixmap_with_value, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_close_device
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_close_device _cgo_2ca6d207c13c_Cfunc_fz_close_device
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_close_device byte
var _cgo_2ca6d207c13c_Cfunc_fz_close_device = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_close_device)

//go:cgo_unsafe_args
func _Cfunc_fz_close_device(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_device) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_close_device, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_count_pages
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_count_pages _cgo_2ca6d207c13c_Cfunc_fz_count_pages
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_count_pages byte
var _cgo_2ca6d207c13c_Cfunc_fz_count_pages = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_count_pages)

//go:cgo_unsafe_args
func _Cfunc_fz_count_pages(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_count_pages, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_device_rgb
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_device_rgb _cgo_2ca6d207c13c_Cfunc_fz_device_rgb
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_device_rgb byte
var _cgo_2ca6d207c13c_Cfunc_fz_device_rgb = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_device_rgb)

//go:cgo_unsafe_args
func _Cfunc_fz_device_rgb(p0 *_Ctype_struct_fz_context) (r1 *_Ctype_struct_fz_colorspace) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_device_rgb, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_buffer
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_buffer _cgo_2ca6d207c13c_Cfunc_fz_drop_buffer
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_buffer byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_buffer = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_buffer)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_buffer(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___7) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_buffer, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_context
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_context _cgo_2ca6d207c13c_Cfunc_fz_drop_context
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_context byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_context = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_context)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_context(p0 *_Ctype_struct_fz_context) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_context, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_device
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_device _cgo_2ca6d207c13c_Cfunc_fz_drop_device
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_device byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_device = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_device)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_device(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_device) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_device, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_document
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_document _cgo_2ca6d207c13c_Cfunc_fz_drop_document
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_document byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_document = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_document)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_document(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_document, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_outline
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_outline _cgo_2ca6d207c13c_Cfunc_fz_drop_outline
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_outline byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_outline = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_outline)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_outline(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_outline) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_outline, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_output
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_output _cgo_2ca6d207c13c_Cfunc_fz_drop_output
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_output byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_output = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_output)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_output(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_output) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_output, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_page _cgo_2ca6d207c13c_Cfunc_fz_drop_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_page)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_page) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap _cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_pixmap(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_pixmap) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_pixmap, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page _cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_stext_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___14) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_stext_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_drop_stream
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stream _cgo_2ca6d207c13c_Cfunc_fz_drop_stream
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stream byte
var _cgo_2ca6d207c13c_Cfunc_fz_drop_stream = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_drop_stream)

//go:cgo_unsafe_args
func _Cfunc_fz_drop_stream(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_stream) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_drop_stream, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints _cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints byte
var _cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints)

//go:cgo_unsafe_args
func _Cfunc_fz_enable_device_hints(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_device, p2 _Ctype_int) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_enable_device_hints, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_keep_stream
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_keep_stream _cgo_2ca6d207c13c_Cfunc_fz_keep_stream
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_keep_stream byte
var _cgo_2ca6d207c13c_Cfunc_fz_keep_stream = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_keep_stream)

//go:cgo_unsafe_args
func _Cfunc_fz_keep_stream(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_stream) (r1 *_Ctype_struct_fz_stream) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_keep_stream, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_load_outline
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_outline _cgo_2ca6d207c13c_Cfunc_fz_load_outline
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_outline byte
var _cgo_2ca6d207c13c_Cfunc_fz_load_outline = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_outline)

//go:cgo_unsafe_args
func _Cfunc_fz_load_outline(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document) (r1 *_Ctype_struct_fz_outline) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_load_outline, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_load_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_page _cgo_2ca6d207c13c_Cfunc_fz_load_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_load_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_load_page)

//go:cgo_unsafe_args
func _Cfunc_fz_load_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document, p2 _Ctype_int) (r1 *_Ctype_struct_fz_page) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_load_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata _cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata byte
var _cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata)

//go:cgo_unsafe_args
func _Cfunc_fz_lookup_metadata(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document, p2 *_Ctype_char, p3 *_Ctype_char, p4 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_lookup_metadata, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_needs_password
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_needs_password _cgo_2ca6d207c13c_Cfunc_fz_needs_password
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_needs_password byte
var _cgo_2ca6d207c13c_Cfunc_fz_needs_password = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_needs_password)

//go:cgo_unsafe_args
func _Cfunc_fz_needs_password(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_document) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_needs_password, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_buffer
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer _cgo_2ca6d207c13c_Cfunc_fz_new_buffer
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_buffer = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer)

//go:cgo_unsafe_args
func _Cfunc_fz_new_buffer(p0 *_Ctype_struct_fz_context, p1 _Ctype_size_t) (r1 *_Ctype_struct___7) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_buffer, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png)

//go:cgo_unsafe_args
func _Cfunc_fz_new_buffer_from_pixmap_as_png(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_pixmap, p2 _Ctype_struct___12) (r1 *_Ctype_struct___7) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_pixmap_as_png, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page)

//go:cgo_unsafe_args
func _Cfunc_fz_new_buffer_from_stext_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___14) (r1 *_Ctype_struct___7) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_buffer_from_stext_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_context_imp
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_context_imp _cgo_2ca6d207c13c_Cfunc_fz_new_context_imp
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_context_imp byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_context_imp = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_context_imp)

//go:cgo_unsafe_args
func _Cfunc_fz_new_context_imp(p0 *_Ctype_struct___0, p1 *_Ctype_struct___1, p2 _Ctype_size_t, p3 *_Ctype_char) (r1 *_Ctype_struct_fz_context) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_context_imp, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_draw_device
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_draw_device _cgo_2ca6d207c13c_Cfunc_fz_new_draw_device
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_draw_device byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_draw_device = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_draw_device)

//go:cgo_unsafe_args
func _Cfunc_fz_new_draw_device(p0 *_Ctype_struct_fz_context, p1 _Ctype_struct___16, p2 *_Ctype_struct_fz_pixmap) (r1 *_Ctype_struct_fz_device) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_draw_device, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer _cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer)

//go:cgo_unsafe_args
func _Cfunc_fz_new_output_with_buffer(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___7) (r1 *_Ctype_struct_fz_output) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_output_with_buffer, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox _cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox)

//go:cgo_unsafe_args
func _Cfunc_fz_new_pixmap_with_bbox(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_colorspace, p2 _Ctype_struct___17, p3 *_Ctype_struct_fz_separations, p4 _Ctype_int) (r1 *_Ctype_struct_fz_pixmap) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_pixmap_with_bbox, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_stext_device
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_device _cgo_2ca6d207c13c_Cfunc_fz_new_stext_device
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_device byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_stext_device = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_device)

//go:cgo_unsafe_args
func _Cfunc_fz_new_stext_device(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___14, p2 *_Ctype_struct___18) (r1 *_Ctype_struct_fz_device) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_stext_device, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_stext_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_page _cgo_2ca6d207c13c_Cfunc_fz_new_stext_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_stext_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_stext_page)

//go:cgo_unsafe_args
func _Cfunc_fz_new_stext_page(p0 *_Ctype_struct_fz_context, p1 _Ctype_struct___6) (r1 *_Ctype_struct___14) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_stext_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_new_svg_device
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_svg_device _cgo_2ca6d207c13c_Cfunc_fz_new_svg_device
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_svg_device byte
var _cgo_2ca6d207c13c_Cfunc_fz_new_svg_device = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_new_svg_device)

//go:cgo_unsafe_args
func _Cfunc_fz_new_svg_device(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_output, p2 _Ctype_float, p3 _Ctype_float, p4 _Ctype_int, p5 _Ctype_int) (r1 *_Ctype_struct_fz_device) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_new_svg_device, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_open_document
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document _cgo_2ca6d207c13c_Cfunc_fz_open_document
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document byte
var _cgo_2ca6d207c13c_Cfunc_fz_open_document = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document)

//go:cgo_unsafe_args
func _Cfunc_fz_open_document(p0 *_Ctype_struct_fz_context, p1 *_Ctype_char) (r1 *_Ctype_struct_fz_document) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_open_document, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream _cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream byte
var _cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream)

//go:cgo_unsafe_args
func _Cfunc_fz_open_document_with_stream(p0 *_Ctype_struct_fz_context, p1 *_Ctype_char, p2 *_Ctype_struct_fz_stream) (r1 *_Ctype_struct_fz_document) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_open_document_with_stream, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_open_memory
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_memory _cgo_2ca6d207c13c_Cfunc_fz_open_memory
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_memory byte
var _cgo_2ca6d207c13c_Cfunc_fz_open_memory = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_open_memory)

//go:cgo_unsafe_args
func _Cfunc_fz_open_memory(p0 *_Ctype_struct_fz_context, p1 *_Ctype_uchar, p2 _Ctype_size_t) (r1 *_Ctype_struct_fz_stream) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_open_memory, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples _cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples byte
var _cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples)

//go:cgo_unsafe_args
func _Cfunc_fz_pixmap_samples(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_pixmap) (r1 *_Ctype_uchar) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_pixmap_samples, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html _cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html byte
var _cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html)

//go:cgo_unsafe_args
func _Cfunc_fz_print_stext_header_as_html(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_output) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_print_stext_header_as_html, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html _cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html byte
var _cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html)

//go:cgo_unsafe_args
func _Cfunc_fz_print_stext_page_as_html(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_output, p2 *_Ctype_struct___14, p3 _Ctype_int) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_print_stext_page_as_html, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html _cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html byte
var _cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html)

//go:cgo_unsafe_args
func _Cfunc_fz_print_stext_trailer_as_html(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_output) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_print_stext_trailer_as_html, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers _cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers byte
var _cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers)

//go:cgo_unsafe_args
func _Cfunc_fz_register_document_handlers(p0 *_Ctype_struct_fz_context) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_register_document_handlers, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_round_rect
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_round_rect _cgo_2ca6d207c13c_Cfunc_fz_round_rect
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_round_rect byte
var _cgo_2ca6d207c13c_Cfunc_fz_round_rect = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_round_rect)

//go:cgo_unsafe_args
func _Cfunc_fz_round_rect(p0 _Ctype_struct___6) (r1 _Ctype_struct___17) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_round_rect, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_run_page
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_run_page _cgo_2ca6d207c13c_Cfunc_fz_run_page
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_run_page byte
var _cgo_2ca6d207c13c_Cfunc_fz_run_page = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_run_page)

//go:cgo_unsafe_args
func _Cfunc_fz_run_page(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct_fz_page, p2 *_Ctype_struct_fz_device, p3 _Ctype_struct___16, p4 *_Ctype_struct___11) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_run_page, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_scale
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_scale _cgo_2ca6d207c13c_Cfunc_fz_scale
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_scale byte
var _cgo_2ca6d207c13c_Cfunc_fz_scale = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_scale)

//go:cgo_unsafe_args
func _Cfunc_fz_scale(p0 _Ctype_float, p1 _Ctype_float) (r1 _Ctype_struct___16) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_scale, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer _cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer byte
var _cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer)

//go:cgo_unsafe_args
func _Cfunc_fz_string_from_buffer(p0 *_Ctype_struct_fz_context, p1 *_Ctype_struct___7) (r1 *_Ctype_char) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_string_from_buffer, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc_fz_transform_rect
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc_fz_transform_rect _cgo_2ca6d207c13c_Cfunc_fz_transform_rect
var __cgofn__cgo_2ca6d207c13c_Cfunc_fz_transform_rect byte
var _cgo_2ca6d207c13c_Cfunc_fz_transform_rect = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc_fz_transform_rect)

//go:cgo_unsafe_args
func _Cfunc_fz_transform_rect(p0 _Ctype_struct___6, p1 _Ctype_struct___16) (r1 _Ctype_struct___6) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc_fz_transform_rect, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}

//go:cgo_import_static _cgo_2ca6d207c13c_Cfunc__Cmalloc
//go:linkname __cgofn__cgo_2ca6d207c13c_Cfunc__Cmalloc _cgo_2ca6d207c13c_Cfunc__Cmalloc
var __cgofn__cgo_2ca6d207c13c_Cfunc__Cmalloc byte
var _cgo_2ca6d207c13c_Cfunc__Cmalloc = unsafe.Pointer(&__cgofn__cgo_2ca6d207c13c_Cfunc__Cmalloc)

//go:linkname runtime_throw runtime.throw
func runtime_throw(string)

//go:cgo_unsafe_args
func _cgo_cmalloc(p0 uint64) (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_2ca6d207c13c_Cfunc__Cmalloc, uintptr(unsafe.Pointer(&p0)))
	if r1 == nil {
		runtime_throw("runtime: C malloc failed")
	}
	return
}
